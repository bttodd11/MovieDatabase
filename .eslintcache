[{"/Users/BTodd/Desktop/PersonalWork/MovieDatabase/my-app/src/index.js":"1","/Users/BTodd/Desktop/PersonalWork/MovieDatabase/my-app/src/App.js":"2","/Users/BTodd/Desktop/PersonalWork/MovieDatabase/my-app/src/reportWebVitals.js":"3","/Users/BTodd/Desktop/PersonalWork/MovieDatabase/my-app/src/component/Title/Title.js":"4","/Users/BTodd/Desktop/PersonalWork/MovieDatabase/my-app/src/component/Search/Search.js":"5","/Users/BTodd/Desktop/PersonalWork/MovieDatabase/my-app/src/component/MovieInfo/MovieInfo.js":"6","/Users/BTodd/Desktop/PersonalWork/MovieDatabase/my-app/src/component/Error/Error.js":"7"},{"size":547,"mtime":1609123553366,"results":"8","hashOfConfig":"9"},{"size":281,"mtime":1609631629506,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1609088171872,"results":"11","hashOfConfig":"9"},{"size":211,"mtime":1611034555098,"results":"12","hashOfConfig":"9"},{"size":5447,"mtime":1611707758848,"results":"13","hashOfConfig":"9"},{"size":6233,"mtime":1611724031955,"results":"14","hashOfConfig":"9"},{"size":124,"mtime":1610514438255,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"elpjck",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/BTodd/Desktop/PersonalWork/MovieDatabase/my-app/src/index.js",[],["33","34"],"/Users/BTodd/Desktop/PersonalWork/MovieDatabase/my-app/src/App.js",["35"],"import './App.css';\nimport Title from './component/Title/Title';\nimport Search from './component/Search/Search';\nimport MovieInfo from './component/MovieInfo/MovieInfo';\n\nfunction App() {\n  return (\n    <div>\n      <Title />\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/BTodd/Desktop/PersonalWork/MovieDatabase/my-app/src/reportWebVitals.js",[],"/Users/BTodd/Desktop/PersonalWork/MovieDatabase/my-app/src/component/Title/Title.js",[],"/Users/BTodd/Desktop/PersonalWork/MovieDatabase/my-app/src/component/Search/Search.js",["36","37","38","39","40","41","42","43","44","45","46","47","48"],"import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport { Container, Row, Col, Badge } from 'react-bootstrap';\nimport MovieInfo from '../MovieInfo/MovieInfo';\nimport MovieLogo from '../Search/img/moviePng.png';\nimport Error from '../Error/Error';\nimport './Search.css';\n\n\n\n\n\nconst Search = () => {\n\n  // Setting our hooks \n  let [movieTitle, setMovieTitle] = useState(\"\")\n  let [currentMovieOptions, setCurrentMovieOptions] = useState([]);\n  let [pageNation, setPageNation] = useState(1);\n  let [selectedMovie, setSelectedMovie] = useState([]);\n  let [datafailure, setDataFailure] = useState(false);\n  let omdbApi = 'http://www.omdbapi.com/?apikey=2c533baf&t=';\n  let nyTimesApi = 'https://api.nytimes.com/svc/movies/v2/reviews/search.json?query=';\n  let apiKey = '&api-key=vKMNXxALAeCJBsOuNv1USvjhAHkXhIFJ'\n  let fullMovieData = {};\n\n\n\n\n  // Setting the movie title user input\n  let movieTitleInput = (event) => {\n    setMovieTitle(event.target.value)\n  }\n\n  // Fetch call for OMDB Database\n  let getOmdbObject = (movieTitle) => {\n    return new Promise((resolve, reject) => {\n      omdbApi = omdbApi + movieTitle;\n      resolve(fetch(omdbApi).then(response => response.json())\n        .then(omdbData => {\n          return omdbData;\n        }))\n\n    })\n  }\n\n  // Fetch call for NY Times Database\n  let getNyTimesObject = (movieTitle, offset) => {\n    return new Promise((resolve, reject) => {\n      // If an offset is present we will need to change the API\n      if (offset) {\n        nyTimesApi = nyTimesApi + movieTitle + '&offset=' + offset + apiKey;\n      }\n      else {\n        nyTimesApi = nyTimesApi + movieTitle + apiKey;\n      }\n\n      // Fetch call for NY Times API\n      resolve(fetch(nyTimesApi).then(response => response.json())\n        .then(nyTimesData => {\n          return nyTimesData.results;\n        })\n      )\n    })\n  }\n\n\n  // Fetch the data from our first API call with the selected movie\n  let fetchData = (movieTitle) => {\n    return Promise.all([getNyTimesObject(movieTitle), getOmdbObject(movieTitle)]).then((movies => {\n\n      for (var index = 0; index < movies[0].length; index++) {\n         // Setting movie title\n        movieTitle = movieTitle.replace(/\\s/g, '').toLowerCase();\n        let currentMovieTitle = movies[0][index].display_title.replace(/\\s/g, '').toLowerCase();\n        \n        if (currentMovieTitle == movieTitle) {\n          fullMovieData = {\n            ...movies[1],\n            ...movies[0][index]\n          }\n\n          setSelectedMovie(fullMovieData)\n          return;\n        }\n      }\n      setCurrentMovieOptions(movies[0])\n        // Changing the offset of the search results\n      setPageNation(pageNation + 1)\n\n    }))\n  }\n  \n \n  // Fetch call to change the offset to get the next movie titles\n  let pageNationOffset = (movieTitle) => {\n   return Promise.all([getNyTimesObject(movieTitle, pageNation)]).then((movieOptions => {\n      setCurrentMovieOptions(movieOptions[0])\n      setPageNation(pageNation + 1)\n   }))}\n\n\n\n\n\n  return (\n    <div id=\"searchSection\">\n      {selectedMovie.length == 0 && datafailure == false ?\n        <div>\n          {currentMovieOptions.length == 0 && selectedMovie.length == 0 ? \n          <div className=\"imageDiv\">\n        <img className=\"movieLogo\" src={MovieLogo}  />\n            </div>\n            : null }\n          <Form>\n            <Form.Group>\n              {currentMovieOptions.length == 0 ? <FormControl className=\"searchBar\"\n                value={movieTitle}\n                onChange={movieTitleInput}\n                placeholder=\"Enter Movie Title\" />\n                : null}\n              {currentMovieOptions.length != 0 ?\n              <div>\n                <Container>\n           \n                  <h6 className=\"movieOptionTitle\">Test</h6>\n                  <Row>\n                    {currentMovieOptions.map(movies =>\n                      (<Col md=\"4\">\n                        <span onClick={() => {fetchData(movies.display_title)}}><p className=\"movieNames\">{movies.display_title}</p></span>\n                      </Col>\n                      ))}\n                  </Row>\n                  <Row>\n                    <Container>\n                      <Row>\n                        {currentMovieOptions.length !== 0 ? <Button onClick={() => pageNationOffset(movieTitle)} className=\"nextPageButton\" size=\"sm\" variant=\"primary\">Next Page</Button> : null}\n                      </Row> \n                    </Container>\n                  </Row>\n                </Container>\n              </div> : null }\n              <br />\n              <Form.Text className=\"text-muted\">\n                Created by :  Brian Todd\n          </Form.Text>\n            </Form.Group>\n          </Form>\n          <div className=\"d-flex justify-content-center\">\n          {currentMovieOptions.length == 0 ? <Button onClick={() => fetchData(movieTitle)} className=\"searchButton\" variant=\"outline-info\">Search</Button> : null}\n          </div>\n        </div>\n        : null}\n        { datafailure == false ? \n      <div>\n        <MovieInfo selected={selectedMovie} />\n      </div> :\n      <div>\n        <Error />\n        </div>\n}\n    </div>\n  )\n}\n\nexport default Search;\n\n\n      {/* { datafailure == false ?\n      <div>\n        <MovieInfo selected={selectedMovie} />\n      </div> :\n      <div>\n        <Error />\n        </div>} */}","/Users/BTodd/Desktop/PersonalWork/MovieDatabase/my-app/src/component/MovieInfo/MovieInfo.js",["49","50","51","52","53","54","55","56","57","58","59","60"],"/Users/BTodd/Desktop/PersonalWork/MovieDatabase/my-app/src/component/Error/Error.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":17},{"ruleId":"65","severity":1,"message":"69","line":5,"column":31,"nodeType":"67","messageId":"68","endLine":5,"endColumn":36},{"ruleId":"65","severity":1,"message":"70","line":22,"column":21,"nodeType":"67","messageId":"68","endLine":22,"endColumn":35},{"ruleId":"71","severity":1,"message":"72","line":78,"column":31,"nodeType":"73","messageId":"74","endLine":78,"endColumn":33},{"ruleId":"71","severity":1,"message":"72","line":109,"column":29,"nodeType":"73","messageId":"74","endLine":109,"endColumn":31},{"ruleId":"71","severity":1,"message":"72","line":109,"column":49,"nodeType":"73","messageId":"74","endLine":109,"endColumn":51},{"ruleId":"71","severity":1,"message":"72","line":111,"column":39,"nodeType":"73","messageId":"74","endLine":111,"endColumn":41},{"ruleId":"71","severity":1,"message":"72","line":111,"column":68,"nodeType":"73","messageId":"74","endLine":111,"endColumn":70},{"ruleId":"75","severity":1,"message":"76","line":113,"column":9,"nodeType":"77","endLine":113,"endColumn":55},{"ruleId":"71","severity":1,"message":"72","line":118,"column":43,"nodeType":"73","messageId":"74","endLine":118,"endColumn":45},{"ruleId":"71","severity":1,"message":"78","line":123,"column":43,"nodeType":"73","messageId":"74","endLine":123,"endColumn":45},{"ruleId":"71","severity":1,"message":"72","line":151,"column":39,"nodeType":"73","messageId":"74","endLine":151,"endColumn":41},{"ruleId":"71","severity":1,"message":"72","line":155,"column":23,"nodeType":"73","messageId":"74","endLine":155,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":170,"column":7,"nodeType":"81","messageId":"82","endLine":176,"endColumn":20},{"ruleId":"65","severity":1,"message":"69","line":2,"column":31,"nodeType":"67","messageId":"68","endLine":2,"endColumn":36},{"ruleId":"83","severity":1,"message":"84","line":28,"column":3,"nodeType":"67","endLine":28,"endColumn":12,"suggestions":"85"},{"ruleId":"71","severity":1,"message":"78","line":29,"column":35,"nodeType":"73","messageId":"74","endLine":29,"endColumn":37},{"ruleId":"75","severity":1,"message":"76","line":67,"column":11,"nodeType":"77","endLine":67,"endColumn":74},{"ruleId":"71","severity":1,"message":"78","line":80,"column":47,"nodeType":"73","messageId":"74","endLine":80,"endColumn":49},{"ruleId":"75","severity":1,"message":"76","line":92,"column":19,"nodeType":"77","endLine":92,"endColumn":68},{"ruleId":"75","severity":1,"message":"76","line":96,"column":19,"nodeType":"77","endLine":96,"endColumn":62},{"ruleId":"75","severity":1,"message":"76","line":97,"column":19,"nodeType":"77","endLine":97,"endColumn":62},{"ruleId":"75","severity":1,"message":"76","line":98,"column":19,"nodeType":"77","endLine":98,"endColumn":62},{"ruleId":"75","severity":1,"message":"76","line":99,"column":19,"nodeType":"77","endLine":99,"endColumn":62},{"ruleId":"75","severity":1,"message":"76","line":100,"column":19,"nodeType":"77","endLine":100,"endColumn":62},{"ruleId":"75","severity":1,"message":"76","line":112,"column":17,"nodeType":"77","endLine":112,"endColumn":57},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'MovieInfo' is defined but never used.","Identifier","unusedVar","'Badge' is defined but never used.","'setDataFailure' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRating'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [MovieInfo.selected, ratings, currentMovie] as a second argument to the useEffect Hook.",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Add dependencies array: [MovieInfo.selected, ratings, currentMovie]",{"range":"91","text":"92"},[1310,1310],", [MovieInfo.selected, ratings, currentMovie]"]